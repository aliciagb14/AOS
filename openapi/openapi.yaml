## Subsistema_2: Gestión de los vehículos que son propiedad de los clientes
## y que se reparan y/o revisan en el taller. 
## Cada vehículo estará identificado de forma única por su VIN.

openapi: 3.0.3
info:
  version: 1.1.0
  title: '[AOS] Especificación API REST de un servicio'
  description: '*Gestion de vehiculos'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'

servers:
  - url: http://127.0.0.1:80/api/v1

tags:
  - name: '🚗Vehiculos'
    description: Gestion de vehiculos
  - name: '👥 Clientes'
    description: Gestion de clientes (propietarios de vehiculos)
  - name: '🧰 Taller'
    description: Reparacion y revisión de vehículos en el taller
  - name: '🔍Identificación'
    description: Identificación de vehículos de forma única por su VIN

paths:
  /vehiculos:
    get:
      summary: Obtiene todos los vehiculos
      description: |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint
        
        | Status Code | Descripción | Motivo                             |
        | ------------| ------------| -----------------------------------|
        | **200**     | OK          | Listado de vehiculos             |
        | **404**     | NOT FOUND   | No hay ningun vehiculo     
      operationId: vehiculo_cget
      tags: ['🚗Vehiculos']
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/orderParam'
        - $ref: '#/components/parameters/orderingParam'
      responses:
        '200':
          description: Listado de vehiculos disponibles
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                type: object
                properties:
                  vehiculos:
                    description: array de vehiculos
                    type: array
                    items:
                      $ref: '#/components/schemas/Vehiculos'
              examples:
                vehiculos-example:
                  $ref: '#/components/examples/vehiculos-example'
        '404':
            $ref: '#/components/responses/Response_404'

    post:
      summary: Añade un nuevo vehiculo
      description: |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint
        
        | Status Code | Descripción          | Motivo                                    |
        | ------------| ---------------------| ------------------------------------------|
        | **201**     | CREATED              | EL vehiculo ha sido creado                |
        | **400**     | BAD REQUEST          | El identificador único ya existe          |
        | **422**     | UNPROCESSABLE ENTITY | Falta alguno de los atributos obligatorios|
        |             |                      | o el valor no está permitido              |
      tags: [ '🚗Vehiculos' ]
      operationId: vehiculos_post
      requestBody:
        $ref: '#/components/requestBodies/vehiculosRB'
      responses:
        '201':
          description: Nuevo vehiculo creado
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehiculos'
        '400':
          $ref: '#/components/responses/Response_400'
        '422':
          $ref: '#/components/responses/Response_422'

    options:
      summary: Proporciona la lista de los métodos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de métodos HTTP soportados (separados por comas).
      operationId: vehiculos_coptions
      tags: [ '🚗Vehiculos']
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta está vacío&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'

  /vehiculos/{vehiculo_id}:
    parameters:
      - $ref: '#/components/parameters/vehiculoId'
    get:
      summary: Obtiene un vehiculo identificado por `vehiculoId`
      description: |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint
        
        | Status Code | Descripción | Motivo                             |
        | ------------| ------------| -----------------------------------|
        | **200**     | OK          | Si el vehiculo existe            |
        | **404**     | NOT FOUND   | Si no existe el vehiculo         |
      operationId: vehiculos_get
      tags: [ '🚗Vehiculos' ]
      responses:
        '200':
          description: Vehiculo
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehiculos'
        '404':
          $ref: '#/components/responses/Response_404'

    delete:
      summary: Elimina el vehiculo identificado por `vehiculoId`
      description: |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint
        
        | Status Code      | Descripción | Motivo                                    |
        | ---------------- | ------------| ------------------------------------------|
        | **204**          | NO CONTENT  | El vehiculo existía y ha sido eliminada |
        | **404**          | NOT FOUND   | Si el vehiculo no existe                |
      operationId: vehiculo_delete
      tags: [ '🚗Vehiculos' ]
      responses:
        '204':
          description: Vehiculo eliminada &lt;Cuerpo de la respuesta vacío&gt;
        '404':
          $ref: '#/components/responses/Response_404'

    put:
      tags: [ '🚗Vehiculos' ]
      summary: Modifica el vehiculo identificado por `vehiculoId`.
      description:  |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint

        | Status Code | Descripción         | Motivo                                        |
        | ------------| --------------------| ----------------------------------------------|
        | **209**     | CONTENT RETURNED    | El vehiculo existía y ha sido actualizado     |
        | **404**     | NOT FOUND           | Si el vehiculo no existe                      |
        | **412**     | PRECONDITION FAILED | Si el ETag proporcionado no está actualizado  |
        | **422**     | UNPROCESSABLE ENTITY| Valor no permitido en alguno de los attributos|
      operationId: vehiculo_put
      parameters:
        # https://www.rfc-editor.org/rfc/rfc7232.html#page-13
        - $ref: '#/components/parameters/ifMatchParam'
      requestBody:
        $ref: '#/components/requestBodies/vehiculoUpdate'
      responses:
        '209':
          description: '`CONTENT RETURNED`: el vehiculo ha sido actualizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehiculo'
        '404':
          $ref: '#/components/responses/Response_404'
        '412':
          $ref: '#/components/responses/Response_412'
        '422':
          $ref: '#/components/responses/Response_422'

    options:
      summary: Proporciona la lista de los métodos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de métodos HTTP soportados (separados por comas).
      operationId: vehiculos_options
      tags: [ '🚗Vehiculos' ]
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta está vacío&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'
  

  /vehiculos/{matricula}:
    parameters:
      - $ref: '#/components/parameters/Matricula'
    get:
      summary: Obtiene un vehiculo identificado por `Matricula`
      description: |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint
        
        | Status Code | Descripción | Motivo                             |
        | ------------| ------------| -----------------------------------|
        | **200**     | OK          | Si la matricula existe            |
        | **404**     | NOT FOUND   | Si no existe la matricula         |
      operationId: vehiculos_matricula_get
      tags: [ '🚗Vehiculos' ]
      responses:
        '200':
          description: Vehiculo
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehiculos'
        '404':
          $ref: '#/components/responses/Response_404'

    delete:
      summary: Elimina el vehiculo identificado por `vehiculoMatricula`
      description: |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint
        
        | Status Code      | Descripción | Motivo                                            |
        | ---------------- | ------------| ------------------------------------------        |
        | **204**          | NO CONTENT  | La matricula del vehiculo existía y ha sido eliminada |
        | **404**          | NOT FOUND   | Si la matricula del vehiculo no existe                |
      operationId: vehiculo_matricula_delete
      tags: [ '🚗Vehiculos' ]
      responses:
        '204':
          description: Vehiculo eliminada &lt;Cuerpo de la respuesta vacío&gt;
        '404':
          $ref: '#/components/responses/Response_404'

    put:
      tags: [ '🚗Vehiculos' ]
      summary: Modifica el vehiculo identificado por `vehiculoMatricula`.
      description:  |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint

        | Status Code | Descripción         | Motivo                                        |
        | ------------| --------------------| ----------------------------------------------|
        | **209**     | CONTENT RETURNED    | La matricula del vehiculo existía y ha sido actualizado     |
        | **404**     | NOT FOUND           | Si la matricula del vehiculo no existe                      |
        | **412**     | PRECONDITION FAILED | Si el ETag proporcionado no está actualizado  |
        | **422**     | UNPROCESSABLE ENTITY| Valor no permitido en alguno de los attributos|
      operationId: vehiculo_matricula_put
      parameters:
        # https://www.rfc-editor.org/rfc/rfc7232.html#page-13
        - $ref: '#/components/parameters/ifMatchParam'
      requestBody:
        $ref: '#/components/requestBodies/vehiculoUpdate'
      responses:
        '209':
          description: '`CONTENT RETURNED`: la matricula del vehiculo ha sido actualizada'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehiculo'
        '404':
          $ref: '#/components/responses/Response_404'
        '412':
          $ref: '#/components/responses/Response_412'
        '422':
          $ref: '#/components/responses/Response_422'

    options:
      summary: Proporciona la lista de los métodos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de métodos HTTP soportados (separados por comas).
      operationId: vehiculos_options
      tags: [ '🚗Vehiculos' ]
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta está vacío&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'

  
  /vehiculos/{marca}:
    parameters:
      - $ref: '#/components/parameters/vehiculoMarca'
    get:
      summary: Obtiene un vehiculo identificado por `vehiculoMarca`
      description: |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint
        
        | Status Code | Descripción | Motivo                             |
        | ------------| ------------| -----------------------------------|
        | **200**     | OK          | Si la marca existe            |
        | **404**     | NOT FOUND   | Si no existe la marca         |
      operationId: vehiculos_marca_get
      tags: [ '🚗Vehiculos' ]
      responses:
        '200':
          description: Vehiculo
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehiculos'
        '404':
          $ref: '#/components/responses/Response_404'

    delete:
      summary: Elimina el vehiculo identificado por `vehiculoMarca`
      description: |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint
        
        | Status Code      | Descripción | Motivo                                            |
        | ---------------- | ------------| ------------------------------------------        |
        | **204**          | NO CONTENT  | La marca del vehiculo existía y ha sido eliminada |
        | **404**          | NOT FOUND   | Si la marca del vehiculo no existe                |
      operationId: vehiculo_marca_delete
      tags: [ '🚗Vehiculos' ]
      responses:
        '204':
          description: Vehiculo eliminada &lt;Cuerpo de la respuesta vacío&gt;
        '404':
          $ref: '#/components/responses/Response_404'

    put:
      tags: [ '🚗Vehiculos' ]
      summary: Modifica el vehiculo identificado por `vehiculoMarca`.
      description:  |
        La siguiente tabla define los códigos de estado que puede devolver este endpoint

        | Status Code | Descripción         | Motivo                                        |
        | ------------| --------------------| ----------------------------------------------|
        | **209**     | CONTENT RETURNED    | La marca del vehiculo existía y ha sido actualizado     |
        | **404**     | NOT FOUND           | Si la marca del vehiculo no existe                      |
        | **412**     | PRECONDITION FAILED | Si el ETag proporcionado no está actualizado  |
        | **422**     | UNPROCESSABLE ENTITY| Valor no permitido en alguno de los attributos|
      operationId: vehiculo_marca_put
      parameters:
        # https://www.rfc-editor.org/rfc/rfc7232.html#page-13
        - $ref: '#/components/parameters/ifMatchParam'
      requestBody:
        $ref: '#/components/requestBodies/vehiculoUpdate'
      responses:
        '209':
          description: '`CONTENT RETURNED`: el vehiculo ha sido actualizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehiculo'
        '404':
          $ref: '#/components/responses/Response_404'
        '412':
          $ref: '#/components/responses/Response_412'
        '422':
          $ref: '#/components/responses/Response_422'

    options:
      summary: Proporciona la lista de los métodos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de métodos HTTP soportados (separados por comas).
      operationId: vehiculos_options
      tags: [ '🚗Vehiculos' ]
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta está vacío&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'

components:
  headers:
    ETag:
      description: "Entity Tag (identificador único proporcionado para validación de caché)"
      schema:
        type: string
        pattern: "[0-9a-f]*"
        example:
          33a64df551425fcc
    Allow:
      description: Lista de métodos HTTP soportados
      schema:
        type: string
      example: GET, DELETE, PUT, OPTIONS
    Location:
      description: '`URI` del nuevo recurso'
      schema:
        type: string
        format: uri
        x-faker: internet.url
        example:
          https://example.com/api/v1/plataformas/P01-001-A

  requestBodies:
    vehiculosRB:
      description: Información del nuevo vehiculo
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [ id, matricula, marca, estado ]
            properties:
              id:
                $ref: '#/components/schemas/Id_Vehiculo'
              matrícula:
                description: Matrícula del coche
                type: string
                pattern: "^[0-9]{4}-[A-Z]{3}$"
                example: "0000-AAA"
              marca:
                $ref: '#/components/schemas/Marca_Vehiculo'
              estado:
                $ref: '#/components/schemas/Estados_Vehiculos'
          example: { "id": "111", "matrícula": "0000-AAA", "marca": "opel", "estado": "en reparacion"}

  parameters:
    vehiculoId:
      name: vehiculo_id
      in: path
      description: Identificador único del Vehiculo
      required: true
      schema:
        $ref: '#/components/schemas/Id_Vehiculo'
    ifMatchParam:
      name: If-Match
      in: header
      description: ETag actual del recurso que se desea modificar
      required: true
      schema:
        type: string
        pattern: "[0-9a-f]*"
    orderParam:
      name: order
      in: query
      description: 'Criterio de ordenación: `id` | `matricula` | `marca` | `estado`'
      required: false
      allowEmptyValue: false
      schema:
        type: string
        enum:
          - id
          - matricula
          - marca
          - estado
    orderingParam:
      name: ordering
      in: query
      description: 'Ordenación: `ASC` | `DESC`'
      required: false
      allowEmptyValue: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
    pageParam:
      name: page
      in: query
      description: 'Número de página'
      required: false
      allowEmptyValue: false
      schema:
        type: integer
        minimum: 1

  schemas:
    Vehiculos:
      title: '🚗Plataforma de gestión de Vehiculos'
      description: >
        Plataforma que tiene vehículos que son propiedad de los clientes 
        y que se reparan y/o revisan en el taller. 
        Cada vehículo estará identificado de forma única por su VIN.<br>
      type: object
      properties:
        plataforma:
          type: object
          required: [ id, matricula, marca, estado ]
          properties:
            id:
              $ref: '#/components/schemas/Id_Vehiculos'
            matricula:
              $ref: '#/components/schemas/Matricula_Vehiculos'
            marca:
              $ref: '#/components/schemas/Marca_Vehiculos'
            estado:
              $ref: '#/components/schemas/Estados_Vehiculos'
      example: { "vehiculo": {
                     "id": "111",
                     "matricula": "0000-AAA",
                     "marca": "opel",
                     "estado": "En reparacion",
                  }
                }


  responses:
    Response_400:
      description: '`BAD REQUEST` El identificador único ya existe.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-400:
              $ref: '#/components/examples/response-http-400'
    Response_404:
      description: '`NOT FOUND`: recurso no disponible'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-404:
              $ref: '#/components/examples/response-http-404'
    Response_409:
      description: '`CONFLICT`: el recurso no reúne las condiciones adecuadas'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-404:
              $ref: '#/components/examples/response-http-409'
    Response_412:
      description: '`PRECONDITION FAILED`: El ETag proporcionado no está actualizado'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-412:
              $ref: '#/components/examples/response-http-412'
    Response_422:
      description: '`UNPROCESSABLE ENTITY` Falta alguno de los atributos obligatorios o son incorrectos.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-422:
              $ref: '#/components/examples/response-http-422'
